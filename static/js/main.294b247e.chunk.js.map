{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","renderSquare","React","Component","Game","state","history","Array","fill","stepNumber","xIsNext","slice","calculateWinner","setState","concat","length","step","status","current","winner","moves","map","move","desc","jumpTo","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"kOAKA,SAASA,EAAOC,GACZ,OAAO,wBAAQC,UAAU,SAASC,QAASF,EAAME,QAA1C,SAAoDF,EAAMG,Q,IAE/DC,E,kKAEJ,SAAaC,GAAI,IAAD,OACd,OAAO,cAACN,EAAD,CACHI,MAAOG,KAAKN,MAAMO,QAAQF,GAC1BH,QAAS,kBAAM,EAAKF,MAAME,QAAQG,Q,oBAIxC,WACE,OACE,gCACE,sBAAKJ,UAAU,YAAf,UACGK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,MAErB,sBAAKP,UAAU,YAAf,UACGK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,MAErB,sBAAKP,UAAU,YAAf,UACGK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,a,GAzBTC,IAAMC,WAkCpBC,E,kDACH,WAAYX,GAAQ,IAAD,8BACf,cAAMA,IACDY,MAAM,CACPC,QAAQ,CAAC,CAACN,QAASO,MAAM,GAAGC,KAAK,QACjCC,WAAY,EACZC,SAAS,GALE,E,+CAUlB,SAAYZ,GACR,IAAMQ,EAAUP,KAAKM,MAAMC,QAAQK,MAAM,EAAEZ,KAAKM,MAAMI,WAAW,GAG3DT,EADUM,EAAQP,KAAKM,MAAMI,YACXT,QAAQW,QAC5BC,EAAgBZ,IAAYA,EAAQF,KACxCE,EAAQF,GAAKC,KAAKM,MAAMK,QAAU,IAAM,IACxCX,KAAKc,SAAS,CACVP,QAASA,EAAQQ,OAAO,CAAC,CAACd,QAASA,KACnCS,WAAWH,EAAQS,OACnBL,SAAUX,KAAKM,MAAMK,a,oBAI5B,SAAOM,GACLjB,KAAKc,SAAS,CACVJ,WAAWO,EACXN,QAAUM,EAAK,IAAK,M,oBAI7B,WAAU,IAgBFC,EAhBC,OACCX,EAAUP,KAAKM,MAAMC,QAErBY,EAAUZ,EAAQP,KAAKM,MAAMI,YAC7BU,EAASP,EAAgBM,EAAQlB,SAEjCoB,EAAQd,EAAQe,KAAI,SAACL,EAAKM,GAC5B,IAAMC,EAAOD,EAAO,eAAiBA,EAAO,mBAC5C,OAAQ,6BAAe,wBACnB3B,QAAS,kBAAI,EAAK6B,OAAOF,IADN,SACcC,KADpBD,MAevB,OALML,EADAE,EACS,WAAaA,EAEb,iBAAmBpB,KAAKM,MAAMK,QAAU,IAAM,KAI3D,sBAAKhB,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAACG,EAAD,CACIG,QAASkB,EAAQlB,QACjBL,QAAS,SAACG,GAAD,OAAO,EAAK2B,YAAY3B,QAGvC,sBAAKJ,UAAU,YAAf,UACE,8BAAMuB,IACN,6BAAKG,c,GAjEIlB,IAAMC,WAwEzB,SAASS,EAAgBZ,GAWrB,IAVA,IAAM0B,EAAQ,CACV,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEF5B,EAAI,EAAGA,EAAI4B,EAAMX,OAAQjB,IAAK,CAAC,IAAD,cACjB4B,EAAM5B,GADW,GAC5B6B,EAD4B,KACzBC,EADyB,KACtBC,EADsB,KAEnC,GAAI7B,EAAQ2B,IAAM3B,EAAQ2B,KAAO3B,EAAQ4B,IAAM5B,EAAQ2B,KAAO3B,EAAQ6B,GAClE,OAAO7B,EAAQ2B,GAGvB,OAAO,KAKXG,IAASC,OACP,cAAC3B,EAAD,IACA4B,SAASC,eAAe,W","file":"static/js/main.294b247e.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\nfunction Square(props){\n    return <button className=\"square\" onClick={props.onClick}>{props.value}</button> }\n\nclass Board extends React.Component {\n\n  renderSquare(i) {\n    return <Square\n        value={this.props.squares[i]}\n        onClick={() => this.props.onClick(i)}\n    />;\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n\n\n}\n\nclass Game extends React.Component {\n   constructor(props) {\n       super(props);\n       this.state={\n           history:[{squares: Array(9).fill(null)}],\n           stepNumber: 0,\n           xIsNext: true,\n       };\n\n   }\n\n    handleClick(i) {\n        const history = this.state.history.slice(0,this.state.stepNumber+1);\n\n        const current = history[this.state.stepNumber];\n        const squares = current.squares.slice();\n        if (calculateWinner(squares) || squares[i]) {      return;    }\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\n        this.setState({\n            history: history.concat([{squares: squares,}]),\n            stepNumber:history.length,\n            xIsNext: !this.state.xIsNext,\n        });\n    }\n\n     jumpTo(step){\n       this.setState({\n           stepNumber:step,\n           xIsNext: (step%2 ===0),\n       })\n     }\n\n  render() {\n      const history = this.state.history;\n\n      const current = history[this.state.stepNumber];\n      const winner = calculateWinner(current.squares);\n\n      const moves = history.map((step,move) => {\n          const desc = move ? 'go To move #' + move : 'Go to game start';\n          return (<li key={move}><button\n              onClick={()=>this.jumpTo(move)}>{desc}\n          </button></li>)\n      })\n\n\n\n\n      let status;\n      if (winner) {\n          status = 'Winner: ' + winner;\n      } else {\n          status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n      }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n              squares={current.squares}\n              onClick={(i) => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction calculateWinner(squares) {\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i];\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n            return squares[a];\n        }\n    }\n    return null;\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}